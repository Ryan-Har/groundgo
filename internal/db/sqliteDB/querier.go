// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqliteDB

import (
	"context"
)

type Querier interface {
	// Checks if an email address already exists in the database.
	// Returns a count (0 or 1).
	CheckEmailExists(ctx context.Context, email string) (int64, error)
	// Inserts a new user into the database.
	// Returns the newly created user's ID.
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// Deletes a user from the database by their ID.
	DeleteUser(ctx context.Context, id string) error
	// Retrieves a user by their email address.
	// Used for login and checking existing registrations.
	GetUserByEmail(ctx context.Context, email string) (User, error)
	// Retrieves a user by their unique ID.
	// Used for session validation and fetching user details.
	GetUserByID(ctx context.Context, id string) (User, error)
	// Retrieves a user by their OAuth provider and OAuth ID.
	// Used for logging in users who registered via an OAuth provider.
	GetUserByOAuth(ctx context.Context, arg GetUserByOAuthParams) (User, error)
	// Retrieves all users from the database.
	// Useful for administrative purposes (e.g., user management panel).
	ListAllUsers(ctx context.Context) ([]User, error)
	// Updates a user's JSON claims data and updates the 'updated_at' timestamp.
	UpdateUserClaims(ctx context.Context, arg UpdateUserClaimsParams) error
	// Updates a user's active status (e.g., for deactivation) and updates the 'updated_at' timestamp.
	UpdateUserIsActive(ctx context.Context, arg UpdateUserIsActiveParams) error
	// Updates a user's password hash and updates the 'updated_at' timestamp.
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	// Updates a user's role and updates the 'updated_at' timestamp.
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) error
	// Sets a user's role,JSON claims data and updates the 'updated_at' timestamp.
	// Useful for keeping the root claim syncronized with the role
	UpdateUserRoleAndClaims(ctx context.Context, arg UpdateUserRoleAndClaimsParams) error
}

var _ Querier = (*Queries)(nil)
